[?2004h[?1049h[22;0;0t[1;35r(B[m[4l[?7h[39;49m[?1h=[?1h=[?25l[39;49m(B[m[H[2J[33;65H(B[0;7m[ Reading... ](B[m[33;64H(B[0;7m[ Read 32 lines ](B[m[H(B[0;7m  GNU nano 7.2                     /home/yunyeongkim/Vault/Vault/leetcode_study/.git/rebase-merge/git-rebase-todo                              [1;142H(B[m[34d(B[0;7m^G(B[m Help[34;16H(B[0;7m^O(B[m Write Out   (B[0;7m^W(B[m Where Is    (B[0;7m^K(B[m Cut[34;61H(B[0;7m^T(B[m Execute     (B[0;7m^C(B[m Location    (B[0;7mM-U(B[m Undo[106G(B[0;7mM-A(B[m Set Mark   (B[0;7mM-](B[m To Bracket[35d(B[0;7m^X(B[m Exit[35;16H(B[0;7m^R(B[m Read File   (B[0;7m^\(B[m Replace     (B[0;7m^U(B[m Paste[61G(B[0;7m^J(B[m Justify     (B[0;7m^/(B[m Go To Line  (B[0;7mM-E(B[m Redo[106G(B[0;7mM-6(B[m Copy[121G(B[0;7m^Q(B[m Where Was[2dnoop[4d[36m# Rebase 3dc26c9..3dc26c9 onto 3dc26c9 (1 command)[5d#[6d# Commands:[7d# p, pick <commit> = use commit[8d# r, reword <commit> = use commit, but edit the commit message[9d# e, edit <commit> = use commit, but stop for amending[10d# s, squash <commit> = use commit, but meld into previous commit[11d# f, fixup [-C | -c] <commit> = like "squash" but keep only the previous[12d#[20X[12;22Hcommit's log message, unless -C is used, in which case[13d#[20X[13;22Hkeep only this commit's message; -c is same as -C but[14d#[20X[14;22Hopens the editor[15d# x, exec <command> = run command (the rest of the line) using shell[16d# b, break = stop here (continue rebase later with 'git rebase --continue')[17d# d, drop <commit> = remove commit[18d# l, label <label> = label current HEAD with a name[19d# t, reset <label> = reset HEAD to a label[20d# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>][21d#         create a merge commit using the original merge commit's[22d#         message (or the oneline, if no original merge commit was[23d#         specified); use -c <commit> to reword the commit message[24d# u, update-ref <ref> = track a placeholder for the <ref> to be updated[25d#[23X[25;25Hto this position in the new commits. The <ref> is[26d#[23X[26;25Hupdated at the end of the rebase[27d#[28d# These lines can be re-ordered; they are executed from top to bottom.[29d#[30d# If you remove a line here THAT COMMIT WILL BE LOST.[31d#[32d# However, if you remove everything, the rebase will be aborted.[2d[39m(B[m[?12l[?25h[?25l[33;42H(B[0;7m[ line  1/33 ( 3%), col  1/ 5 ( 20%), char    0/1485 ( 0%) ](B[m[?12l[?25h[2d[?25l[33d[J[35d[?12l[?25h[35;1H[?1049l[23;0;0t[?1l>[?2004l